/**
 * 삽입정렬(Insertion Sort)
 * O(N^2)
 * 
 * 버블처럼 바로 다음 값과 비교하면서 넘기는 것은 같지만
 * 자리 바꾸게되면 그 앞에 자리도 다시 비교해본다
 * (이미 정렬이 어느정도 된 상태라면 이 정렬이 제일 빠르다)
 */

// 1 10 5 8 7 6 4 3 2 9

// 1 loop
// > 1 5 10 8 7 6 4 3 2 9
// > 1 5 8 10 7 6 4 3 2 9
// > 1 5 8 7 10 6 4 3 2 9
// > 1 5 7 8 10 6 4 3 2 9
// > 1 5 7 8 6 10 4 3 2 9
// > 1 5 7 6 8 10 4 3 2 9
// > 1 5 6 7 8 10 4 3 2 9
// > 1 5 6 7 8 4 10 3 2 9
// > 1 5 6 7 4 8 10 3 2 9
// > 1 5 6 4 7 8 10 3 2 9
// > 1 5 4 6 7 8 10 3 2 9
// > 1 4 5 6 7 8 10 3 2 9
// > 1 4 5 6 7 8 3 10 2 9
// > 1 4 5 6 7 3 8 10 2 9
// > 1 4 5 6 3 7 8 10 2 9
// > 1 4 5 3 6 7 8 10 2 9
// > 1 4 3 5 6 7 8 10 2 9
// > 1 3 4 5 6 7 8 10 2 9
// > 1 3 4 5 6 7 8 2 10 9
// > 1 3 4 5 6 7 2 8 10 9
// > 1 3 4 5 6 2 7 8 10 9
// > 1 3 4 5 2 6 7 8 10 9
// > 1 3 4 2 5 6 7 8 10 9
// > 1 3 2 4 5 6 7 8 10 9
// > 1 2 3 4 5 6 7 8 10 9
// > 1 2 3 4 5 6 7 8 9 10